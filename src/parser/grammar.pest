number = @{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)?}
ident = @{ ASCII_ALPHA ~ ( ASCII_ALPHANUMERIC | "_" | "{" | "}" )* }

unit_expr = { unit_term ~ (unit_operation ~ unit_term)* }
    unit_operation = { "*" | "/" }
    unit_postfix_operation = { "^" ~ ASCII_DIGIT+ }
    unit = { ASCII_ALPHA+ }
    unit_term = _{ unit ~ unit_postfix_operation | paren_unit_expr | unit ~ unit_expr* }
    paren_unit_expr = _{ "(" ~ unit_expr ~ ")" }

expression = { term ~ (operation ~ term)* }
    term = _{ paren_expr | (ident | number | unit_expr ) ~ unit_expr* }
    paren_expr = _{"(" ~ expression ~ ")"}

operation = @{ add | subtract | multiply | divide | power }
    add      = { "+" }
    subtract = { "-" }
    multiply = { "*" }
    divide   = { "/" }
    power    = { "^" }

statement = { dec_print_expr | print_expr | var_dec | expression }
    var_dec = { ident ~ "=" ~ expression }
    print_expr = { expression ~ "=" ~ "?" ~ unit_expr }
    dec_print_expr = { ident ~ "=" ~ expression ~ "=" ~ "?" ~ unit_expr }

program = _{ "\n"* ~ statement ~ ("\n" ~ program)* }

WHITESPACE = _{ " " | "\t" }
